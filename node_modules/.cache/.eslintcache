[{"/Users/mattsmac/development/portfolio/todo-list/src/index.js":"1","/Users/mattsmac/development/portfolio/todo-list/src/App.js":"2","/Users/mattsmac/development/portfolio/todo-list/src/components/TodoForm.js":"3","/Users/mattsmac/development/portfolio/todo-list/src/components/TodoList.js":"4","/Users/mattsmac/development/portfolio/todo-list/src/components/Todo.js":"5"},{"size":175,"mtime":1646216094000,"results":"6","hashOfConfig":"7"},{"size":239,"mtime":1652443172172,"results":"8","hashOfConfig":"7"},{"size":1272,"mtime":1652448801352,"results":"9","hashOfConfig":"7"},{"size":1235,"mtime":1652443100549,"results":"10","hashOfConfig":"7"},{"size":1179,"mtime":1652442529461,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"25da7l",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"23","usedDeprecatedRules":"14"},"/Users/mattsmac/development/portfolio/todo-list/src/index.js",[],[],"/Users/mattsmac/development/portfolio/todo-list/src/App.js",[],"/Users/mattsmac/development/portfolio/todo-list/src/components/TodoForm.js",["24"],"/Users/mattsmac/development/portfolio/todo-list/src/components/TodoList.js",[],"/Users/mattsmac/development/portfolio/todo-list/src/components/Todo.js",["25","26","27"],"import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: '',\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: '',\n    });\n  };\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate}></TodoForm>;\n  }\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div\n        key={todo.id}\n        onClick={() => completeTodo(todo.id)}\n        aria-hidden='true'\n      >\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n",{"ruleId":"28","severity":1,"message":"29","line":21,"column":18,"nodeType":"30","messageId":"31","endLine":21,"endColumn":19,"fix":"32"},{"ruleId":"33","severity":1,"message":"34","line":3,"column":8,"nodeType":"35","messageId":"36","endLine":3,"endColumn":16},{"ruleId":"28","severity":1,"message":"29","line":10,"column":14,"nodeType":"30","messageId":"31","endLine":10,"endColumn":15,"fix":"37"},{"ruleId":"28","severity":1,"message":"29","line":17,"column":16,"nodeType":"30","messageId":"31","endLine":17,"endColumn":17,"fix":"38"},"comma-dangle","Unexpected trailing comma.","Property","unexpected",{"range":"39","text":"40"},"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar",{"range":"41","text":"40"},{"range":"42","text":"40"},[429,430],"",[334,335],[456,457]]